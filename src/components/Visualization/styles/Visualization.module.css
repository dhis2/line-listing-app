/* Legend key */
.legendKeyContainer {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}

.legendKeyWrapper {
    border: 1px solid var(--colors-grey400);
    overflow: auto;
    height: 100%;
}

.legendKey {
    height: 100%;
}

.legendKeyScrollbox {
    overflow-y: auto;
    overflow-x: hidden;
    min-width: 190px;
}

.legendKeyToggle {
    margin: 1px 4px 3px 0;
}

@media print {
    .legendKeyToggle {
        display: none;
    }
}

.pluginContainer {
    display: flex;
    justify-content: space-between;
    gap: var(--spacers-dp4);
    min-width: 0;
    flex-grow: 1;
    min-width: 0;
    width: 100%;
}

.fetchContainer {
    display: flex;
    align-self: flex-start;
    position: relative;
    height: auto;
    min-width: 0;
    max-height: 100%;
}

.fetchContainer.fetching > .fetchIndicator {
    content: '';
    position: absolute;
    left: calc(50% - 12px);
    width: 24px;
    height: 24px;
    border-width: 3px;
    border-style: solid;
    border-color: rgba(110, 122, 138, 0.15) rgba(110, 122, 138, 0.15)
        rgb(20, 124, 215);
    border-image: initial;
    border-radius: 50%;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-name: rotation;
    animation-timing-function: linear;
    z-index: 1;
}

.fetchContainer.fetching tbody::before {
    content: '';
    position: absolute;
    inset: 0px;
    background-color: rgba(255, 255, 255, 0.8);
}

.fetchContainer :global(.tablescrollbox) {
    transition: max-width 200ms ease-out;
}

.visualizationContainer {
    display: flex;
    flex-direction: column;
    max-width: 100%;
}
.noTimeDimensionWarning {
    padding-bottom: var(--spacers-dp12);
}

.stickyFooter {
    position: sticky;
    bottom: 0;
    z-index: 1;
}

.stickyFooter .footerCell {
    padding: 0;
}

.stickyNavigation {
    position: sticky;
    left: 0;
}

/* Table header cells in various sizes */
.dataTable .headerCell.dimensionModalHandler {
    cursor: pointer;
}
.dataTable .headerCell.fontSizeLarge {
    font-size: 14px;
    line-height: 15px;
}
.dataTable .headerCell.fontSizeNormal {
    font-size: 12px;
    line-height: 13px;
}
.dataTable .headerCell.fontSizeSmall {
    font-size: 11px;
    line-height: 12px;
}
.dataTable .headerCell.sizeComfortable {
    padding: 8px 4px 6px 8px;
}
.dataTable .headerCell.sizeNormal {
    padding: 4px 4px 2px 6px;
}
.dataTable .headerCell.sizeCompact {
    padding: 3px 2px 1px 6px;
}

/* Table body cells in various sizes */
.dataTable .cell.fontSizeLarge {
    font-size: 14px;
    line-height: 15px;
}
.dataTable .cell.fontSizeNormal {
    font-size: 12px;
    line-height: 13px;
}
.dataTable .cell.fontSizeSmall {
    font-size: 11px;
    line-height: 12px;
}
.dataTable .cell.sizeComfortable {
    padding: 10px 8px 8px;
}
.dataTable .cell.sizeNormal {
    padding: 7px 6px 5px;
}
.dataTable .cell.sizeCompact {
    padding: 6px 6px 4px;
}

/* Empty cell */
.dataTable .emptyCell::after {
    content: '\00a0';
}

.dataTable .cell.nowrap {
    white-space: nowrap;
}

.dataTable .undefinedCell {
    background-image: repeating-linear-gradient(
        45deg,
        var(--colors-grey300) 0,
        var(--colors-grey300) 0.8px,
        transparent 0,
        transparent 50%
    );
    background-size: 8px 8px;
}

/* Sizes for the table footer */
.dataTable .stickyNavigation.sizeComfortable {
    padding: 14px 12px;
}
.dataTable .stickyNavigation.sizeNormal {
    padding: 10px 12px;
}
.dataTable .stickyNavigation.sizeCompact {
    padding: 6px 12px;
}
.error {
    flex: 1;
    align-self: flex-start;
    margin: 0 var(--spacers-dp12);
}
@keyframes rotation {
    0% {
        transform: rotate(0);
    }

    100% {
        transform: rotate(360deg);
    }
}
