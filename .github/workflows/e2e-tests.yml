name: 'dhis2: e2e tests'

# Requirements:
#
# - Secrets:
#     GITHUB_TOKEN
#     CYPRESS_DHIS2_USERNAME
#     CYPRESS_DHIS2_PASSWORD
#
# - Customize environment variables:
#     BASE_URL_INSTANCES: Set the base url for the instances
#     NAME_PATTERN_LEGACY_INSTANCES: Name pattern for your instances. {version} will be replaced by "[majorVersion].[minorVersion]"
#     NAME_PATTERN_DEV_INSTANCE: The instance to use for getting the max version
#     CYPRESS_CONTAINERS: The number of parallel Cypress job runs running for each backend version.
#     Note that the minimum instance version comes from minDHIS2Version in d2.config.js
#
# - Set status check as required:
#     We recommend setting "call-e2e-tests-result / e2e-tests-success"  as a required step in your workflow.
#     This will ensure that one of the following must be true before the PR can be merged:
#       1) The tests have successfully run
#       2) The dev took a conscious decision not to run the tests (see e2e-tests-skip.yml)
#       3) They were skipped due to a special case (see e2e-tests-exception.yml)

on:
    push:

env:
    BASE_URL_INSTANCES: https://test.e2e.dhis2.org
    NAME_PATTERN_LEGACY_INSTANCES: '{version}lytics-dev'
    NAME_PATTERN_DEV_INSTANCE: dev
    CYPRESS_CONTAINERS: 8

defaults:
    run:
        shell: bash

jobs:
    prerequisites:
        runs-on: ubuntu-latest
        outputs:
            matrix-containers: ${{ steps.matrix-containers.outputs.containers }}
            versions: ${{ steps.legacy-versions.outputs.versions }}
        steps:
            - name: compute-matrix-containers
              id: matrix-containers
              run: |
                  for (( cnt = 1; cnt <= $CYPRESS_CONTAINERS; cnt++)); do containers+=$cnt,; done
                  echo "::set-output name=containers::[ ${containers%,} ]"

            - name: checkout
              uses: actions/checkout@v2

            - name: compute-instance-url
              id: instance-url
              run: echo "::set-output name=url::${BASE_URL_INSTANCES%/}/${NAME_PATTERN_DEV_INSTANCE/"{version}"/dev}"

            - id: legacy-versions
              uses: dhis2/action-supported-legacy-versions@v1
              with:
                  instance-url-latest: ${{ steps.instance-url.outputs.url }} # can be removed if maxDHIS2Version has been specified
                  username: ${{ secrets.CYPRESS_DHIS2_USERNAME }} # can be removed if maxDHIS2Version has been specified
                  password: ${{ secrets.CYPRESS_DHIS2_PASSWORD }} # can be removed if maxDHIS2Version has been specified

    cypress:
        needs: prerequisites
        runs-on: ubuntu-latest
        container: cypress/browsers:node14.7.0-chrome84
        strategy:
            fail-fast: false
            matrix:
                versions: ${{ fromJSON(needs.prerequisites.outputs.versions) }}
                containers: ${{ fromJSON(needs.prerequisites.outputs.matrix-containers) }}
        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-node@v1
              with:
                  node-version: 14.x

            - name: compute-instance-url
              id: instance-url
              run: echo "::set-output name=url::${BASE_URL_INSTANCES%/}/${NAME_PATTERN_LEGACY_INSTANCES/"{version}"/$version}"
              env:
                  version: ${{ matrix.versions }}

            - name: Cypress run
              uses: cypress-io/github-action@v2
              with:
                  record: true
                  parallel: true
                  group: e2e-chrome-parallel-${{ matrix.versions }}
                  browser: chrome
                  start: yarn d2-app-scripts start
                  wait-on: http://localhost:3000
                  wait-on-timeout: 300
              env:
                  CI: true
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CYPRESS_dhis2BaseUrl: ${{ steps.instance-url.outputs.url }}
                  CYPRESS_dhis2Username: ${{ secrets.CYPRESS_DHIS2_USERNAME }}
                  CYPRESS_dhis2Password: ${{ secrets.CYPRESS_DHIS2_PASSWORD }}
                  CYPRESS_dhis2InstanceVersion: ${{matrix.versions}}
                  CYPRESS_networkMode: live
